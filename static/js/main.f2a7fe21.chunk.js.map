{"version":3,"sources":["assets/select.mp3","components/Navigation.jsx","Context.js","components/Footer.jsx","components/Modal.jsx","Utilities.jsx","components/Color.jsx","components/Colors.jsx","components/Random.jsx","components/Popular.jsx","components/Compliments.jsx","components/ColorsContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","Navbar","bg","variant","to","className","Nav","DataContext","React","createContext","DataProvider","state","clipboard","settings","system","max","audio","htmlColors","handleCopied","color","convertRgbtoHex","setState","handleSystemChange","e","target","value","convertHexToRgb","hex","r","slice","g","b","toRgb","val","parseInt","rgb","match","toHex","toString","handleMaxChange","handleAudioChange","checked","Provider","this","props","children","Component","Footer","context","useContext","Form","Group","Label","Control","as","size","name","onChange","defaultValue","Check","inline","label","type","id","defaultChecked","onClick","role","aria-label","Model","msg","style","backgroundColor","getRandomColor","i","Math","floor","random","length","convertToCompliment","toCom","Color","useState","isClick","setIsClick","setMsg","msgs","colorValue","handleClick","Audio","SelectedAudio","play","index","handleRandomMsg","str","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","handleCopyToClipboard","intervalId","setTimeout","clearTimeout","Card","Body","Title","Colors","colors","map","key","Random","modifiedColors","getRandomColors","push","getRgbValues","contextType","Popular","Compliments","compliment","handleChange","Row","column","sm","Col","placeholder","ColorsContainer","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,oC,uOCI5B,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,gBAAvB,WAGA,kBAACC,EAAA,EAAD,CAAKD,UAAU,WACb,kBAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,YAAvB,UAGA,kBAAC,IAAD,CAAMD,GAAG,eAAeC,UAAU,YAAlC,eAGA,kBAAC,IAAD,CAAMD,GAAG,WAAWC,UAAU,YAA9B,iB,oBChBFE,EAAcC,IAAMC,gBAEpBC,E,4MACJC,MAAQ,CACNC,UAAW,UACXC,SAAU,CACRC,OAAQ,WACRC,IAAK,GACLC,OAAO,GAETC,WAAY,CACV,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,gB,EAIJC,aAAe,SAACC,GACG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","file":"static/js/main.f2a7fe21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/select.eba816ab.mp3\";","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <Navbar bg='dark' variant='dark'>\r\n      <Link to='/' className='navbar-brand'>\r\n        Coolors\r\n      </Link>\r\n      <Nav className='ml-auto'>\r\n        <Link to='/' className='nav-link'>\r\n          Random\r\n        </Link>\r\n        <Link to='/compliments' className='nav-link'>\r\n          Compliments\r\n        </Link>\r\n        <Link to='/popular' className='nav-link'>\r\n          HTML Colors\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nconst DataContext = React.createContext()\r\n\r\nclass DataProvider extends Component {\r\n  state = {\r\n    clipboard: '#ABCD21',\r\n    settings: {\r\n      system: '#HEXCODE',\r\n      max: 20,\r\n      audio: true,\r\n    },\r\n    htmlColors: [\r\n      'AliceBlue',\r\n      'AntiqueWhite',\r\n      'Aqua',\r\n      'Aquamarine',\r\n      'Azure',\r\n      'Beige',\r\n      'Bisque',\r\n      'Black',\r\n      'BlanchedAlmond',\r\n      'Blue',\r\n      'BlueViolet',\r\n      'Brown',\r\n      'BurlyWood',\r\n      'CadetBlue',\r\n      'Chartreuse',\r\n      'Chocolate',\r\n      'Coral',\r\n      'CornflowerBlue',\r\n      'Cornsilk',\r\n      'Crimson',\r\n      'Cyan',\r\n      'DarkBlue',\r\n      'DarkCyan',\r\n      'DarkGoldenRod',\r\n      'DarkGray',\r\n      'DarkGrey',\r\n      'DarkGreen',\r\n      'DarkKhaki',\r\n      'DarkMagenta',\r\n      'DarkOliveGreen',\r\n      'DarkOrange',\r\n      'DarkOrchid',\r\n      'DarkRed',\r\n      'DarkSalmon',\r\n      'DarkSeaGreen',\r\n      'DarkSlateBlue',\r\n      'DarkSlateGray',\r\n      'DarkSlateGrey',\r\n      'DarkTurquoise',\r\n      'DarkViolet',\r\n      'DeepPink',\r\n      'DeepSkyBlue',\r\n      'DimGray',\r\n      'DimGrey',\r\n      'DodgerBlue',\r\n      'FireBrick',\r\n      'FloralWhite',\r\n      'ForestGreen',\r\n      'Fuchsia',\r\n      'Gainsboro',\r\n      'GhostWhite',\r\n      'Gold',\r\n      'GoldenRod',\r\n      'Gray',\r\n      'Grey',\r\n      'Green',\r\n      'GreenYellow',\r\n      'HoneyDew',\r\n      'HotPink',\r\n      'IndianRed',\r\n      'Indigo',\r\n      'Ivory',\r\n      'Khaki',\r\n      'Lavender',\r\n      'LavenderBlush',\r\n      'LawnGreen',\r\n      'LemonChiffon',\r\n      'LightBlue',\r\n      'LightCoral',\r\n      'LightCyan',\r\n      'LightGoldenRodYellow',\r\n      'LightGray',\r\n      'LightGrey',\r\n      'LightGreen',\r\n      'LightPink',\r\n      'LightSalmon',\r\n      'LightSeaGreen',\r\n      'LightSkyBlue',\r\n      'LightSlateGray',\r\n      'LightSlateGrey',\r\n      'LightSteelBlue',\r\n      'LightYellow',\r\n      'Lime',\r\n      'LimeGreen',\r\n      'Linen',\r\n      'Magenta',\r\n      'Maroon',\r\n      'MediumAquaMarine',\r\n      'MediumBlue',\r\n      'MediumOrchid',\r\n      'MediumPurple',\r\n      'MediumSeaGreen',\r\n      'MediumSlateBlue',\r\n      'MediumSpringGreen',\r\n      'MediumTurquoise',\r\n      'MediumVioletRed',\r\n      'MidnightBlue',\r\n      'MintCream',\r\n      'MistyRose',\r\n      'Moccasin',\r\n      'NavajoWhite',\r\n      'Navy',\r\n      'OldLace',\r\n      'Olive',\r\n      'OliveDrab',\r\n      'Orange',\r\n      'OrangeRed',\r\n      'Orchid',\r\n      'PaleGoldenRod',\r\n      'PaleGreen',\r\n      'PaleTurquoise',\r\n      'PaleVioletRed',\r\n      'PapayaWhip',\r\n      'PeachPuff',\r\n      'Peru',\r\n      'Pink',\r\n      'Plum',\r\n      'PowderBlue',\r\n      'Purple',\r\n      'RebeccaPurple',\r\n      'Red',\r\n      'RosyBrown',\r\n      'RoyalBlue',\r\n      'SaddleBrown',\r\n      'Salmon',\r\n      'SandyBrown',\r\n      'SeaGreen',\r\n      'SeaShell',\r\n      'Sienna',\r\n      'Silver',\r\n      'SkyBlue',\r\n      'SlateBlue',\r\n      'SlateGray',\r\n      'SlateGrey',\r\n      'Snow',\r\n      'SpringGreen',\r\n      'SteelBlue',\r\n      'Tan',\r\n      'Teal',\r\n      'Thistle',\r\n      'Tomato',\r\n      'Turquoise',\r\n      'Violet',\r\n      'Wheat',\r\n      'White',\r\n      'WhiteSmoke',\r\n      'Yellow',\r\n      'YellowGreen',\r\n    ],\r\n  }\r\n\r\n  handleCopied = (color) => {\r\n    if (color[0] !== '#') color = this.convertRgbtoHex(color)\r\n\r\n    this.setState({ clipboard: color })\r\n  }\r\n\r\n  handleSystemChange = (e) => {\r\n    this.setState({\r\n      settings: { ...this.state.settings, system: e.target.value },\r\n    })\r\n  }\r\n\r\n  convertHexToRgb = (hex) => {\r\n    let r = hex.slice(1, 3),\r\n      g = hex.slice(3, 5),\r\n      b = hex.slice(5, 7)\r\n    const toRgb = (val) => parseInt(val, 16)\r\n\r\n    return `rgb(${toRgb(r)}, ${toRgb(g)}, ${toRgb(b)})`\r\n  }\r\n\r\n  convertRgbtoHex = (rgb) => {\r\n    const color = rgb.match(/\\d+/g)\r\n    let r = color[0],\r\n      g = color[1],\r\n      b = color[2]\r\n    const toHex = (value) => {\r\n      let val = parseInt(value)\r\n      let hex = val.toString(16)\r\n      return val < 16 ? '0' + hex : hex\r\n    }\r\n\r\n    return '#' + toHex(r) + toHex(g) + toHex(b)\r\n  }\r\n\r\n  handleMaxChange = (e) => {\r\n    this.setState({\r\n      settings: { ...this.state.settings, max: parseInt(e.target.value) },\r\n    })\r\n  }\r\n\r\n  handleAudioChange = (e) => {\r\n    this.setState({\r\n      settings: { ...this.state.settings, audio: e.target.checked },\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DataContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          handleSystemChange: this.handleSystemChange,\r\n          handleMaxChange: this.handleMaxChange,\r\n          handleAudioChange: this.handleAudioChange,\r\n          convertHexToRgb: this.convertHexToRgb,\r\n          convertRgbtoHex: this.convertRgbtoHex,\r\n          handleCopied: this.handleCopied,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </DataContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport { DataContext, DataProvider }\r\n","import React, { useContext } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { DataContext } from '../Context'\r\n\r\nexport default function Footer() {\r\n  const context = useContext(DataContext)\r\n  const {\r\n    handleSystemChange,\r\n    handleMaxChange,\r\n    handleAudioChange,\r\n    settings,\r\n  } = context\r\n\r\n  return (\r\n    <footer className='bg-secondary'>\r\n      <div className='container-fluid py-2'>\r\n        <div className='row align-items-center justify-content-between'>\r\n          <div className='col-md-6 col-sm-9'>\r\n            <Form className='d-flex'>\r\n              <Form.Group className='d-flex m-0 mr-3 align-items-center'>\r\n                <Form.Label className='m-0 mr-2 text-white'>System:</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  size='sm'\r\n                  name='system'\r\n                  onChange={(e) => handleSystemChange(e)}\r\n                >\r\n                  <option>#HEXCODE</option>\r\n                  <option>RGB</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group className='d-flex m-0 mr-2 align-items-center'>\r\n                <Form.Label className='m-0 mr-2 text-white'>Max: </Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  size='sm'\r\n                  name='system'\r\n                  className='mr-2'\r\n                  defaultValue={settings.max}\r\n                  onChange={(e) => handleMaxChange(e)}\r\n                >\r\n                  <option>20</option>\r\n                  <option>80</option>\r\n                  <option>120</option>\r\n                  <option>300</option>\r\n                  <option>500</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Check\r\n                inline\r\n                label='Audio'\r\n                className='text-white'\r\n                type='checkbox'\r\n                id='color-pick-audio'\r\n                defaultChecked={settings.audio}\r\n                onClick={(e) => handleAudioChange(e)}\r\n              />\r\n            </Form>\r\n          </div>\r\n\r\n          <div className='col-md-3 col-sm-6'>\r\n            <p className='text-white text-right mb-0 ml-auto'>\r\n              Made with{' '}\r\n              <span role='img' aria-label='Heart'>\r\n                🖤\r\n              </span>{' '}\r\n              by Aashish\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Model({ value, msg }) {\r\n  return (\r\n    <section id='color-copy-toast' style={{ backgroundColor: value }}>\r\n      <h3>{msg}</h3>\r\n      <h5>{value}</h5>\r\n    </section>\r\n  )\r\n}\r\n","const handleCopyToClipboard = (str) => {\r\n  // Creating virtual textarea to select msg\r\n  let textArea = document.createElement('textarea')\r\n  textArea.value = str\r\n  document.body.appendChild(textArea)\r\n\r\n  // Selects the input and executes the 'COPY' command\r\n  textArea.select()\r\n  document.execCommand('copy')\r\n\r\n  // Removing virtual textarea\r\n  document.body.removeChild(textArea)\r\n}\r\n\r\nconst getRandomColor = () => {\r\n  let hexNum = '0123456789ABCDEF'\r\n  let color = '#'\r\n  for (let i = 0; i < 6; i++) {\r\n    color += hexNum[Math.floor(Math.random() * hexNum.length)]\r\n  }\r\n  return color\r\n}\r\n\r\nconst convertHexToRgb = (hex) => {\r\n  let r = hex.slice(1, 3),\r\n    g = hex.slice(3, 5),\r\n    b = hex.slice(5, 7)\r\n  const toRgb = (val) => parseInt(val, 16)\r\n\r\n  return `rgb(${toRgb(r)}, ${toRgb(g)}, ${toRgb(b)})`\r\n}\r\n\r\nconst convertRgbtoHex = (rgb) => {\r\n  const color = rgb.match(/\\d+/g)\r\n  let r = color[0],\r\n    g = color[1],\r\n    b = color[2]\r\n  const toHex = (value) => {\r\n    let val = parseInt(value)\r\n    let hex = val.toString(16)\r\n    return val < 16 ? '0' + hex : hex\r\n  }\r\n\r\n  return '#' + toHex(r) + toHex(g) + toHex(b)\r\n}\r\n\r\nconst convertToCompliment = (hex) => {\r\n  let r = hex.slice(1, 3)\r\n  let g = hex.slice(3, 5)\r\n  let b = hex.slice(5, 7)\r\n\r\n  const toCom = (value) => {\r\n    let val = parseInt('FF', 16) - parseInt(value, 16)\r\n    const hex = val.toString(16)\r\n    return val < 16 ? '0' + hex : hex\r\n  }\r\n\r\n  return `#${toCom(r) + toCom(g) + toCom(b)}`\r\n}\r\n\r\nexport {\r\n  convertToCompliment,\r\n  convertRgbtoHex,\r\n  convertHexToRgb,\r\n  getRandomColor,\r\n  handleCopyToClipboard,\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Model from './Modal'\r\nimport SelectedAudio from '../assets/select.mp3'\r\nimport { DataContext } from '../Context'\r\nimport { handleCopyToClipboard } from '../Utilities'\r\n\r\nexport default function Color({ hex }) {\r\n  const context = useContext(DataContext)\r\n  const {\r\n    settings: { audio },\r\n    handleCopied,\r\n  } = context\r\n  const [isClick, setIsClick] = useState(false)\r\n  const [msg, setMsg] = useState('')\r\n\r\n  const msgs = [\r\n    'Copied!',\r\n    'Right One!',\r\n    \"It'll Rock!\",\r\n    'Will Do!',\r\n    'Paste Me!',\r\n    'Got It!',\r\n  ]\r\n\r\n  const colorValue = hex || '#000000'\r\n\r\n  const handleSelectedAudio = () => {\r\n    let selectedSound = new Audio(SelectedAudio)\r\n    selectedSound.play()\r\n  }\r\n\r\n  const handleRandomMsg = () => {\r\n    const index = Math.floor(Math.random() * msgs.length)\r\n    setMsg(msgs[index])\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    setIsClick(true) // Poping Model box\r\n    audio && handleSelectedAudio() // Select Audio Effect\r\n    handleRandomMsg() // Random Poping Msg\r\n    handleCopyToClipboard(colorValue) // Copies to Clipboard\r\n    handleCopied(colorValue) // Copies to State\r\n\r\n    let intervalId = setTimeout(function () {\r\n      clearTimeout(intervalId)\r\n      setIsClick(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <Card className='card-color' onClick={() => handleClick()}>\r\n      {isClick && <Model value={colorValue} msg={msg} />}\r\n      <div className='color-img' style={{ backgroundColor: colorValue }}></div>\r\n      <Card.Body className='color-name'>\r\n        <Card.Title>{colorValue}</Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Color from './Color'\r\n\r\nexport default class Colors extends Component {\r\n  render() {\r\n    const colors = this.props.colors.map((color, i) => (\r\n      <Color key={i} hex={color} />\r\n    ))\r\n\r\n    return (\r\n      <div className='container-fluid py-3'>\r\n        <div className='card-container'>{colors}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Colors from './Colors'\r\nimport { DataContext } from '../Context'\r\nimport { getRandomColor } from '../Utilities'\r\n\r\nexport default class Random extends Component {\r\n  static contextType = DataContext\r\n\r\n  state = {\r\n    colors: [],\r\n    modifiedColors: [],\r\n    max: 0,\r\n    system: null,\r\n  }\r\n\r\n  getRandomColors = (max) => {\r\n    let colors = []\r\n    for (let i = 0; i < max; i++) {\r\n      colors.push(getRandomColor())\r\n    }\r\n    return colors\r\n  }\r\n\r\n  getRgbValues(colors) {\r\n    const { convertHexToRgb } = this.context\r\n    return colors.map((color) => convertHexToRgb(color))\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { max, system } = this.context.settings\r\n    let colors = this.getRandomColors(max)\r\n    if (system === 'RGB') colors = this.getRgbValues(colors)\r\n    this.setState({ colors, modifiedColors: colors, max, system })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      settings: { max, system },\r\n    } = this.context\r\n\r\n    if (this.state.max !== max) {\r\n      const colors = this.getRandomColors(max)\r\n      this.setState({ colors, modifiedColors: colors, max })\r\n    }\r\n\r\n    if (system !== this.state.system) {\r\n      if (system === 'RGB') {\r\n        const colors = this.getRgbValues(this.state.colors)\r\n        this.setState({ modifiedColors: colors, system })\r\n      } else {\r\n        this.setState({ modifiedColors: this.state.colors, system })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Colors colors={this.state.modifiedColors} />\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Colors from './Colors'\r\nimport { DataContext } from '../Context'\r\n\r\nexport default class Popular extends Component {\r\n  static contextType = DataContext\r\n  render() {\r\n    return <Colors colors={this.context.htmlColors} />\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Color from './Color'\r\nimport { Form, Col, Row } from 'react-bootstrap'\r\nimport { DataContext } from '../Context'\r\nimport { convertToCompliment } from '../Utilities'\r\n\r\nexport default class Compliments extends Component {\r\n  static contextType = DataContext\r\n  state = {\r\n    hex: this.context.clipboard,\r\n    compliment: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleChange(this.state.hex)\r\n  }\r\n\r\n  handleChange = (value) => {\r\n    if (value[0] === '#' && value.length === 7) {\r\n      this.setState({ hex: value, compliment: convertToCompliment(value) })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container-fluid py-3'>\r\n        <div className='row justify-content-center mb-3'>\r\n          <div className='col-md-6'>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm='2'>\r\n                Hex Color:\r\n              </Form.Label>\r\n              <Col sm='10' className='d-flex align-items-center'>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder={this.state.hex}\r\n                  onChange={(e) => this.handleChange(e.target.value)}\r\n                />\r\n                <input\r\n                  type='color'\r\n                  id='favcolor'\r\n                  name='favcolor'\r\n                  className='ml-2'\r\n                  onChange={(e) => this.handleChange(e.target.value)}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row justify-content-center'>\r\n          <div className='col-md-3'>\r\n            <Color hex={this.state.hex} />\r\n            <h5 className='text-center my-2'>Original Color</h5>\r\n          </div>\r\n\r\n          <div className='col-md-3'>\r\n            <Color hex={this.state.compliment} />\r\n            <h5 className='text-center my-2'>Complimentary Color</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Random from './Random'\r\nimport Popular from './Popular'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Compliments from './Compliments'\r\n\r\nexport default function ColorsContainer() {\r\n  return (\r\n    <div className='colors-container my-2'>\r\n      <Switch>\r\n        <Route exact path='/' component={Random} />\r\n        <Route exact path='/random' component={Random} />\r\n        <Route exact path='/popular' component={Popular} />\r\n        <Route exact path='/compliments' component={Compliments} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\nimport Navigation from './components/Navigation'\nimport Footer from './components/Footer'\nimport ColorsContainer from './components/ColorsContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='one-page'>\n        <Navigation />\n        <ColorsContainer />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { DataProvider } from './Context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='coolers'>\n      <DataProvider>\n        <App />\n      </DataProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}